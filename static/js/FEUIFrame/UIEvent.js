// Generated by CoffeeScript 1.8.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['FEUI/UIObject'], function(UIObject) {
  var UIEvent;
  return UIEvent = (function(_super) {
    var EVENT_HANDLE, EVENT_HASH_ATTR, EVENT_ID, EVENT_LIST, testEventHash;

    __extends(UIEvent, _super);

    EVENT_HASH_ATTR = 'event-hash';

    EVENT_ID = 0;

    EVENT_LIST = {};

    EVENT_HANDLE = function(event) {
      var elem, eventHandleList, eventHash, eventName, eventPath, target, _i, _len, _results;
      eventName = event.type;
      target = event.target;
      eventHandleList = EVENT_LIST[eventName];
      eventPath = event.path.slice(0, -2);
      _results = [];
      for (_i = 0, _len = eventPath.length; _i < _len; _i++) {
        elem = eventPath[_i];
        eventHash = elem.getAttribute(EVENT_HASH_ATTR);
        if (testEventHash(eventHash) && (eventHash in eventHandleList)) {
          _results.push(eventHandleList[eventHash](event));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    testEventHash = function(eventHash) {
      return true;
    };

    function UIEvent() {
      _super.call(this);
      this.eventList = {};
    }

    UIEvent.prototype.addEvent = function(eventName, action, useCapture) {
      var eventHandleList, eventHash, eventId;
      if (useCapture == null) {
        useCapture = false;
      }
      eventId = EVENT_ID++;
      if (!(eventName in EVENT_LIST)) {
        EVENT_LIST[eventName] = {};
        document.addEventListener(eventName, EVENT_HANDLE, useCapture);
      }
      eventHandleList = EVENT_LIST[eventName];
      eventHash = this.id + '.' + eventId;
      eventHandleList[eventHash] = action;
      this.eventList[eventId] = action;
      return eventHash;
    };

    UIEvent.prototype.removeEvent = function(id) {};

    return UIEvent;

  })(UIObject);
});
